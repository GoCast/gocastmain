Index: libjingle/trunk/talk/media/webrtc/webrtcvideocapturer.cc
===================================================================
--- libjingle/trunk/talk/media/webrtc/webrtcvideocapturer.cc	(revision 253)
+++ libjingle/trunk/talk/media/webrtc/webrtcvideocapturer.cc	(working copy)
@@ -190,8 +190,8 @@
   }
   factory_->DestroyDeviceInfo(info);
   if (supported.empty()) {
-    LOG(LS_ERROR) << "Failed to find usable formats for id: " << device.id;
-    return false;
+    LOG(LS_WARNING) << "Failed to find usable formats for id: " << device.id;
+    //return false;
   }
 
   module_ = factory_->Create(0, vcm_id);
@@ -203,7 +203,10 @@
   // It is safe to change member attributes now.
   module_->AddRef();
   SetId(device.id);
-  SetSupportedFormats(supported);
+    
+  if (!supported.empty()) {
+    SetSupportedFormats(supported);        
+  }
   return true;
 }
 
Index: libjingle/trunk/talk/app/webrtc/localvideosource.cc
===================================================================
--- libjingle/trunk/talk/app/webrtc/localvideosource.cc	(revision 253)
+++ libjingle/trunk/talk/app/webrtc/localvideosource.cc	(working copy)
@@ -63,16 +63,18 @@
 // Default resolution. If no constraint is specified, this is the resolution we
 // will use.
 static const cricket::VideoFormatPod kDefaultResolution =
-    {640, 480, FPS_TO_INTERVAL(30), cricket::FOURCC_ANY};
+    //{640, 480, FPS_TO_INTERVAL(30), cricket::FOURCC_ANY};
+    {160, 120, FPS_TO_INTERVAL(14), cricket::FOURCC_ANY};
 
 // List of formats used if the camera don't support capability enumeration.
 static const cricket::VideoFormatPod kVideoFormats[] = {
-  {1280, 720, FPS_TO_INTERVAL(30), cricket::FOURCC_ANY},
-  {960, 720, FPS_TO_INTERVAL(30), cricket::FOURCC_ANY},
-  {640, 360, FPS_TO_INTERVAL(30), cricket::FOURCC_ANY},
-  {640, 480, FPS_TO_INTERVAL(30), cricket::FOURCC_ANY},
-  {320, 240, FPS_TO_INTERVAL(30), cricket::FOURCC_ANY},
-  {320, 180, FPS_TO_INTERVAL(30), cricket::FOURCC_ANY}
+  {1280, 720, FPS_TO_INTERVAL(14), cricket::FOURCC_ANY},
+  {960, 720, FPS_TO_INTERVAL(14), cricket::FOURCC_ANY},
+  {640, 360, FPS_TO_INTERVAL(14), cricket::FOURCC_ANY},
+  {640, 480, FPS_TO_INTERVAL(14), cricket::FOURCC_ANY},
+  {320, 240, FPS_TO_INTERVAL(14), cricket::FOURCC_ANY},
+  {320, 180, FPS_TO_INTERVAL(14), cricket::FOURCC_ANY},
+  {160, 120, FPS_TO_INTERVAL(14), cricket::FOURCC_ANY}
 };
 
 MediaSourceInterface::SourceState
